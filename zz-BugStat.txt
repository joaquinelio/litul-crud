

this.  missing                                     ***************   30+
spelling                                          spell  **********  47
[]  init array                                      REAL BUG  -----------------------
this.divCrud.appendChild(this.div1)   divMain       real BUG  ----------------------
this.mode = newMode                   _mode         real BUG -----------------------
divCrud - divMain                                       REAL BUG  --------------------------
fieldset no css flex                                    REAL BUG -------------------------
confirm noshow                                      REAL BUG-------------------------
confirm disable confirm butt after hit                 REAL BUG ----------------------                                      
From to-do list...                                    REAL BUGS -----------------  1
Firefox era                                     Spell *********************** 7
Firefox era                                         REAL BUGS              2



To do, to test & to fix 
=======================

** js: **  Bugs
- Dirty panel selection. The now spread code should be one place. Bug? Bug cryer. Better code allows expansion.
- It seems too jumpy. Need to check excessive enable/disable divs. No much a bug, still is. Better app.
- Other panels but crud: Buttons should be disabled inmediatly after pressed instead of expect the correct behaviour may not ocurr.  
- ERROR handle.  Reckless work of mine.  throw new Error("something") everywhere.  Not a bug, close to. It has to be done.



** js: ** Improvement 
- addCustomInput() 
  like custom button.  useful for, example, range searchs. I can even replace customButton with
  addCustomElement() 
  so dev can do anything like status, text, icons, inputChkbox, sliders;  
  not only buttons, they all inside crudpad, visible on modes dev chooses.
  Pretty sure I'll end adding it.  IT IS USEFUL.  Still inline...
- setRead()  
  int instead of bool: number of input text elements. 
  so dev's searchAndShow(input) receives inputtexts values array
  Useful for ranges. If more complex than text needed, (sliders, date pickers) then
  the next sugestion: addCustomInput()  or addCustomElement() 
- get mode:
  I dont see why Dev would want it, but I let it anyway.
  But it is a number (I hate js).  He can check  crudpad.mode == crudpad.MODE_LIST.MODIFY 
  I can do the js way, the WRONG way:  crudpad.mode == 'modify'
  or keep the object & replace numbers by texts, Dev cannot (well... js) set .mode so wouldnt hurt, 
  but I should rewrite code because binary  flag sum wouldnt be available anymore  MODE_LIST.MODIFY + MODE_LIST.CREATE   
- Maybe.  REMOVE the crudpad as html element class part.  Make it just a function that injects html crudpad.
    Looks scary.  Shoudn't be.  
    var names would be more controlable
    all 'this.' would be erradicated.  onclick = _btTired  would work fine wo any hacks.
- svg waiting ugly
- some lint for vscode? 
- Bored button should show after some timeout 
- Button custom names: let svg icons
- Button custom names:
    instead of padButtons[], a get/set(button) specific property innerHtml. CSS can still apply without it.
    or nothing, given the method to alter all innerHtml.
    customButtons can stay, dev owns them. 
- changemode() focus parameter. 
    Good taste rules require focus to be implemented. So, here it is again.  
    plus TAB navigation inside, buttons & inputs.
- add Confirm Ok msg, default ""



** js ** Structure  Improvement
-create HARD buttons instead of _makeButton() on the fly.
    it 'll be easy for dev to access the allowed properties, svg icon, title, text, hover...
        .divcrud.ButtonOk.innerHtml = '<svg>... 
    Then the other elements instead of _createElement() then add properties:  
        .confirm.buttonYes = 'Yep!'    
        .crud.confirmCancelMsg = 'really?'
-Generators instead of _setReusltCaller()? 
  Would be big. Works well without, 
  if i understand it can be better code:
  fewer functions (can be good or not), lesser blind guess behaviour.



** css: **
- everything, flex arrangement the first!
- hey() should flash. Wanted more discrete than alert, but it is too shy.
- transitions, not all the same.  1/2s too long
- enabled inputs should be more visible
- media query to diferentiate, hide via visibility (so dont jump) or via display (more free space)
- vertical pad?  why not, flex column via attr.
- everything  uglyness 

** chalenge: ** 
- touch & drag the toolbar to a new position: left, up, right.  Not my current scope, but...

** tst app: ** 
-

party.



===========================
Done?  Philosophical issues 
===========================
- msg background to show mode... half coded, not implemented.  Maybe not, too obvious with the enabled buttons.  
- Help button? Dev can use a custom button, so maybenot.
- Button custom names: write -json file?- for innerhtml. // Custom labesl are needed. json is not. 
- BOF EOF to disable related nav buttons?   
    Would need more info in result(), too specific to be a clean new param.  after error param ? Too dirty. 
    Easy: methods for Dev to call: .navBof() .navEof(), after that, related nav buttons remain disabled until  new, del or mov. 
    NOT important. When pressed past the last, it just put "not found" and keeps the last record. It more than ok.


=====
Done.
=====
- ()=>{this._crudfunction()} as onclick parameter: It works!  Cleaner code. Less crazy but still. I hate js.  
- Tooltip parameteer in button!  This is useful.   Custom buttons only, title attr parameter 
- diferentiate 'unexpected result' from 'unexpected error'. Just info to the user to let him feel guilty cause he hit abort.
- tst app: simulate big async delay
- func naming to fit CRUD acronym
- short for Button is not... ejem... Butt.  bt or btn.  
- Button custom names: Test params test textcontent,  
- nav buttons: no custom text parameter. They still should support custom icons
- nav buttons: tooltip first prev next last to let readers.     
- confirm() let one of the 2 cb to be empty. Doing nothing in one of them makes sense.  
- crudpad.result(), the method to change modes,  
  renamed to .resultOk() to differentiate from db.result readonly property
  sendResult() didnt like it, tellResult() would have been more suitable 
- after search, inputs still enabled!  in mode.show 
- msg hoover: msg as tip, useful if (ever) vertical
- delegation. Unified onclick, switch-case.  Multiple _bt() stay. js should hide them, js fault.
- Big this._dev.category.item  replace over 30  this._  related to dev implementation with ONE object
- Button naming: test the optional parameter
- db cursor to test nav
